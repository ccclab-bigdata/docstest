var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": "(Image: Build Status) (Image: Coverage Status)"
},

{
    "location": "#SOFA.jl-1",
    "page": "Readme",
    "title": "SOFA.jl",
    "category": "section",
    "text": "Unofficial wrapper of the IAU SOFA C libraries for fundamental astronomy. "
},

{
    "location": "#Description-1",
    "page": "Readme",
    "title": "Description",
    "category": "section",
    "text": "The purpose of this package is to wrap the SOFA C library of fundamental astonomical function to make it easily accessible in Julia. This package serves as a wrapper only. All functions ultimately call the original, unmodified, SOFA C library functions which are compiled as part of the package build process.The full SOFA C test suite is reproduced as part of the package to prove compliance and reproducibility of the core SOFA C functionality."
},

{
    "location": "#Package-Version-SOFA-Release-Correspondence-1",
    "page": "Readme",
    "title": "Package Version <-> SOFA Release Correspondence",
    "category": "section",
    "text": "The package versions correspond to the following releases of the SOFA C Library:Package Version SOFA Release\nv1.0 2018-01-30"
},

{
    "location": "#Notes-1",
    "page": "Readme",
    "title": "Notes",
    "category": "section",
    "text": "All computed values are returned by the function call. No values are returned by reference.\nWrappers for iauAtciqn, iauAticqn, and iauLdn do not currently work properly."
},

{
    "location": "#Compliance-with-SOFA-License-1",
    "page": "Readme",
    "title": "Compliance with SOFA License",
    "category": "section",
    "text": "This distribution is permitted and compliant with the SOFA license. See the LICENSE for details."
},

{
    "location": "autodocs/#SOFA.iauA2af",
    "page": "Docstrings",
    "title": "SOFA.iauA2af",
    "category": "function",
    "text": "Decompose radians into degrees, arcminutes, arcseconds, fraction. This function is part of the International Astronomical Union\'s SOFA (Standards Of Fundamental Astronomy) software collection.\n\nStatus:  vector/matrix support function.\n\nGiven:    ndp     int     resolution (Note 1)    angle   double  angle in radians\n\nReturned:    sign    char    \'+\' or \'-\'    idmsf   int[4]  degrees, arcminutes, arcseconds, fraction\n\nCalled:    iauD2tf      decompose days to hms\n\nNotes:     1. The argument ndp is interpreted as follows:     ndp         resolution      :      ...0000 00 00     -7         1000 00 00     -6          100 00 00     -5           10 00 00     -4            1 00 00     -3            0 10 00     -2            0 01 00     -1            0 00 10      0            0 00 01      1            0 00 00.1      2            0 00 00.01      3            0 00 00.001      :            0 00 00.000...\n\n2. The largest positive useful value for ndp is determined by the\n\nsize of angle, the format of doubles on the target platform, and    the risk of overflowing idmsf[3].  On a typical platform, for    angle up to 2pi, the available floating-point precision might    correspond to ndp=12.  However, the practical limit is typically    ndp=9, set by the capacity of a 32-bit int, or ndp=4 if int is    only 16 bits.\n\n3. The absolute value of angle may exceed 2pi.  In cases where it\n\ndoes not, it is up to the caller to test for and handle the    case where angle is very nearly 2pi and rounds up to 360 degrees,    by testing for idmsf[0]=360 and setting idmsf[0-3] to zero.\n\nThis revision:  2013 June 18\n\nSOFA release 2018-01-30\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauA2tf",
    "page": "Docstrings",
    "title": "SOFA.iauA2tf",
    "category": "function",
    "text": "Decompose radians into hours, minutes, seconds, fraction.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards Of Fundamental Astronomy) software collection.\n\nStatus:  vector/matrix support function.\n\nGiven:    ndp     int     resolution (Note 1)    angle   double  angle in radians\n\nReturned:    sign    char    \'+\' or \'-\'    ihmsf   int[4]  hours, minutes, seconds, fraction\n\nCalled:    iauD2tf      decompose days to hms\n\nNotes:\n\n1. The argument ndp is interpreted as follows:\n    ndp         resolution\n     :      ...0000 00 00\n    -7         1000 00 00\n    -6          100 00 00\n    -5           10 00 00\n    -4            1 00 00\n    -3            0 10 00\n    -2            0 01 00\n    -1            0 00 10\n     0            0 00 01\n     1            0 00 00.1\n     2            0 00 00.01\n     3            0 00 00.001\n     :            0 00 00.000...\n\n2. The largest positive useful value for ndp is determined by the\nsize of angle, the format of doubles on the target platform, and\nthe risk of overflowing ihmsf[3].  On a typical platform, for\nangle up to 2pi, the available floating-point precision might\ncorrespond to ndp=12.  However, the practical limit is typically\nndp=9, set by the capacity of a 32-bit int, or ndp=4 if int is\nonly 16 bits.\n\n3. The absolute value of angle may exceed 2pi.  In cases where it\ndoes not, it is up to the caller to test for and handle the\ncase where angle is very nearly 2pi and rounds up to 24 hours,\nby testing for ihmsf[0]=24 and setting ihmsf[0-3] to zero.\n\nThis revision:  2013 July 31\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauASTROM",
    "page": "Docstrings",
    "title": "SOFA.iauASTROM",
    "category": "type",
    "text": "Star-independent astrometry parameters\n\nNote:     - Vectors eb, eh, em and v are all with respect to BCRS axes.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAb",
    "page": "Docstrings",
    "title": "SOFA.iauAb",
    "category": "function",
    "text": "Apply aberration to transform natural direction into proper direction.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    pnat    double[3]   natural direction to the source (unit vector)    v       double[3]   observer barycentric velocity in units of c    s       double      distance between the Sun and the observer (au)    bm1     double      sqrt(1-|v|^2): reciprocal of Lorenz factor\n\nReturned:    ppr     double[3]   proper direction to source (unit vector)\n\nNotes:\n\nThe algorithm is based on Expr. (7.40) in the Explanatory\n\nSupplement (Urban & Seidelmann 2013), but with the following    changes:       - Rigorous rather than approximate normalization is applied.       -The gravitational potential term from Expr. (7) in       Klioner (2003) is added, taking into account only the Sun\'s       contribution.  This has a maximum effect of about       0.4 microarcsecond.\n\nIn almost all cases, the maximum accuracy will be limited by the\n\nsupplied velocity.  For example, if the SOFA iauEpv00 function is    used, errors of up to 5 microarcseconds could occur.\n\nReferences:\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to\n\nthe Astronomical Almanac, 3rd ed., University Science Books    (2013).\n\nKlioner, Sergei A., \"A practical relativistic model for micro-\n\narcsecond astrometry in space\", Astr. J. 125, 1580-1597 (2003).\n\nCalled:    iauPdp       scalar product of two p-vectors\n\nThis revision:   2013 October 9\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAe2hd",
    "page": "Docstrings",
    "title": "SOFA.iauAe2hd",
    "category": "function",
    "text": "Horizon to equatorial coordinates:  transform azimuth and altitude to hour angle and declination.\n\nGiven:    az       double       azimuth    el       double       altitude (informally, elevation)    phi      double       site latitude\n\nReturned:    ha       double       hour angle (local)    dec      double       declination\n\nNotes:\n\nAll the arguments are angles in radians.\nThe sign convention for azimuth is north zero, east +pi/2.\nHA is returned in the range +/-pi.  Declination is returned in\n\nthe range +/-pi/2.\n\nThe latitude phi is pi/2 minus the angle between the Earth\'s\n\nrotation axis and the adopted zenith.  In many applications it    will be sufficient to use the published geodetic latitude of the    site.  In very precise (sub-arcsecond) applications, phi can be    corrected for polar motion.\n\nThe azimuth az must be with respect to the rotational north pole,\n\nas opposed to the ITRS pole, and an azimuth with respect to north    on a map of the Earth\'s surface will need to be adjusted for    polar motion if sub-arcsecond accuracy is required.\n\nShould the user wish to work with respect to the astronomical\n\nzenith rather than the geodetic zenith, phi will need to be    adjusted for deflection of the vertical (often tens of    arcseconds), and the zero point of ha will also be affected.\n\nThe transformation is the same as Ve = Ry(phi-pi/2)Rz(pi)Vh,\n\nwhere Ve and Vh are lefthanded unit vectors in the (ha,dec) and    (az,el) systems respectively and Rz and Ry are rotations about    first the z-axis and then the y-axis.  (n.b. Rz(pi) simply    reverses the signs of the x and y components.)  For efficiency,    the algorithm is written out rather than calling other utility    functions.  For applications that require even greater    efficiency, additional savings are possible if constant terms    such as functions of latitude are computed once and for all.\n\nAgain for efficiency, no range checking of arguments is carried\n\nout.\n\nLast revision:   2017 September 12\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAf2a",
    "page": "Docstrings",
    "title": "SOFA.iauAf2a",
    "category": "function",
    "text": "Convert degrees, arcminutes, arcseconds to radians.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:     s         char    sign:  \'-\' = negative, otherwise positive     ideg      int     degrees     iamin     int     arcminutes     asec      double  arcseconds\n\nReturned:     rad       double  angle in radians\n\nReturned (function value):     int status:  0 = OK                  1 = ideg outside range 0-359                  2 = iamin outside range 0-59                  3 = asec outside range 0-59.999... Notes:     1. The result is computed even if any of the range checks fail.\n\n2. Negative ideg, iamin and/or asec produce a warning status, but\nthe absolute value is used in the conversion.\n\n3. If there are multiple errors, the status value reflects only the\nfirst, the smallest taking precedence.\n\nThis revision:  2013 June 18\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAnp",
    "page": "Docstrings",
    "title": "SOFA.iauAnp",
    "category": "function",
    "text": "Normalize angle into the range 0 <= a < 2pi.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards Of Fundamental Astronomy) software collection.\n\nStatus:  vector/matrix support function.\n\nGiven:    a        double     angle (radians)\n\nReturned (function value):    double     angle in range 0-2pi\n\nThis revision:  2013 June 18\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAnpm",
    "page": "Docstrings",
    "title": "SOFA.iauAnpm",
    "category": "function",
    "text": "Normalize angle into the range -pi <= a < +pi.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards Of Fundamental Astronomy) software collection.\n\nStatus:  vector/matrix support function.\n\nGiven:    a        double     angle (radians)\n\nReturned (function value):    double     angle in range +/-pi\n\nThis revision:  2013 June 18\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauApcg",
    "page": "Docstrings",
    "title": "SOFA.iauApcg",
    "category": "function",
    "text": "For a geocentric observer, prepare star-independent astrometry parameters for transformations between ICRS and GCRS coordinates. The Earth ephemeris is supplied by the caller.\n\nThe parameters produced by this function are required in the parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:     date1  double       TDB as a 2-part...     date2  double       ...Julian Date (Note 1)     ebpv   double[2][3] Earth barycentric pos/vel (au, au/day)     ehp    double[3]    Earth heliocentric position (au)\n\nReturned:     astrom iauASTROM*   star-independent astrometry parameters:      pmt    double       PM time interval (SSB, Julian years)      eb     double[3]    SSB to observer (vector, au)      eh     double[3]    Sun to observer (unit vector)      em     double       distance from Sun to observer (au)      v      double[3]    barycentric observer velocity (vector, c)      bm1    double       sqrt(1-|v|^2): reciprocal of Lorenz factor      bpn    double[3][3] bias-precession-nutation matrix      along  double       unchanged      xpl    double       unchanged      ypl    double       unchanged      sphi   double       unchanged      cphi   double       unchanged      diurab double       unchanged      eral   double       unchanged      refa   double       unchanged      refb   double       unchanged\n\nNotes:     1. The TDB date date1+date2 is a Julian Date, apportioned in any     convenient way between the two arguments.  For example,     JD(TDB)=2450123.7 could be expressed in any of these ways, among     others:\n\n        date1          date2\n\n     2450123.7           0.0       (JD method)\n     2451545.0       -1421.3       (J2000 method)\n     2400000.5       50123.2       (MJD method)\n     2450123.5           0.2       (date & time method)\n\nThe JD method is the most natural and convenient to use in cases\nwhere the loss of several decimal digits of resolution is\nacceptable.  The J2000 method is best matched to the way the\nargument is handled internally and will deliver the optimum\nresolution.  The MJD method and the date & time methods are both\ngood compromises between resolution and convenience.  For most\napplications of this function the choice will not be at all\ncritical.\n\nTT can be used instead of TDB without any significant impact on\naccuracy.\n\n2. All the vectors are with respect to BCRS axes.\n\n3. This is one of several functions that inserts into the astrom\nstructure star-independent parameters needed for the chain of\nastrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\n\nThe various functions support different classes of observer and\nportions of the transformation chain:\n\n      functions         observer        transformation\n\n   iauApcg iauApcg13    geocentric      ICRS <-> GCRS\n   iauApci iauApci13    terrestrial     ICRS <-> CIRS\n   iauApco iauApco13    terrestrial     ICRS <-> observed\n   iauApcs iauApcs13    space           ICRS <-> GCRS\n   iauAper iauAper13    terrestrial     update Earth rotation\n   iauApio iauApio13    terrestrial     CIRS <-> observed\n\nThose with names ending in \"13\" use contemporary SOFA models to\ncompute the various ephemerides.  The others accept ephemerides\nsupplied by the caller.\n\nThe transformation from ICRS to GCRS covers space motion,\nparallax, light deflection, and aberration.  From GCRS to CIRS\ncomprises frame bias and precession-nutation.  From CIRS to\nobserved takes account of Earth rotation, polar motion, diurnal\naberration and parallax (unless subsumed into the ICRS <-> GCRS\ntransformation), and atmospheric refraction.\n\n4. The context structure astrom produced by this function is used by\niauAtciq* and iauAticq*.\n\nCalled:     iauApcs      astrometry parameters, ICRS-GCRS, space observer\n\nThis revision:   2013 October 9\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauApcg13",
    "page": "Docstrings",
    "title": "SOFA.iauApcg13",
    "category": "function",
    "text": "For a geocentric observer, prepare star-independent astrometry parameters for transformations between ICRS and GCRS coordinates. The caller supplies the date, and SOFA models are used to predict the Earth ephemeris.\n\nThe parameters produced by this function are required in the parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    date1  double     TDB as a 2-part...    date2  double     ...Julian Date (Note 1)\n\nReturned:    astrom iauASTROM* star-independent astrometry parameters:       pmt    double       PM time interval (SSB, Julian years)       eb     double[3]    SSB to observer (vector, au)       eh     double[3]    Sun to observer (unit vector)       em     double       distance from Sun to observer (au)       v      double[3]    barycentric observer velocity (vector, c)       bm1    double       sqrt(1-|v|^2): reciprocal of Lorenz factor       bpn    double[3][3] bias-precession-nutation matrix       along  double       unchanged       xpl    double       unchanged       ypl    double       unchanged       sphi   double       unchanged       cphi   double       unchanged       diurab double       unchanged       eral   double       unchanged       refa   double       unchanged       refb   double       unchanged\n\nNotes:\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any\n\nconvenient way between the two arguments.  For example,    JD(TDB)=2450123.7 could be expressed in any of these ways, among    others:\n\n        date1          date2\n\n     2450123.7           0.0       (JD method)\n     2451545.0       -1421.3       (J2000 method)\n     2400000.5       50123.2       (MJD method)\n     2450123.5           0.2       (date & time method)\n\nThe JD method is the most natural and convenient to use in cases    where the loss of several decimal digits of resolution is    acceptable.  The J2000 method is best matched to the way the    argument is handled internally and will deliver the optimum    resolution.  The MJD method and the date & time methods are both    good compromises between resolution and convenience.  For most    applications of this function the choice will not be at all    critical.\n\nTT can be used instead of TDB without any significant impact on    accuracy.\n\nAll the vectors are with respect to BCRS axes.\nIn cases where the caller wishes to supply his own Earth\n\nephemeris, the function iauApcg can be used instead of the present    function.\n\nThis is one of several functions that inserts into the astrom\n\nstructure star-independent parameters needed for the chain of    astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\n\nThe various functions support different classes of observer and    portions of the transformation chain:\n\n      functions         observer        transformation\n\n   iauApcg iauApcg13    geocentric      ICRS <-> GCRS\n   iauApci iauApci13    terrestrial     ICRS <-> CIRS\n   iauApco iauApco13    terrestrial     ICRS <-> observed\n   iauApcs iauApcs13    space           ICRS <-> GCRS\n   iauAper iauAper13    terrestrial     update Earth rotation\n   iauApio iauApio13    terrestrial     CIRS <-> observed\n\nThose with names ending in \"13\" use contemporary SOFA models to    compute the various ephemerides.  The others accept ephemerides    supplied by the caller.\n\nThe transformation from ICRS to GCRS covers space motion,    parallax, light deflection, and aberration.  From GCRS to CIRS    comprises frame bias and precession-nutation.  From CIRS to    observed takes account of Earth rotation, polar motion, diurnal    aberration and parallax (unless subsumed into the ICRS <-> GCRS    transformation), and atmospheric refraction.\n\nThe context structure astrom produced by this function is used by\n\niauAtciq* and iauAticq*.\n\nCalled:      iauEpv00     Earth position and velocity      iauApcg      astrometry parameters, ICRS-GCRS, geocenter\n\nThis revision:   2013 October 9\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauApci",
    "page": "Docstrings",
    "title": "SOFA.iauApci",
    "category": "function",
    "text": "For a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and geocentric CIRS coordinates.  The Earth ephemeris and CIP/CIO are supplied by the caller.\n\nThe parameters produced by this function are required in the parallax, light deflection, aberration, and bias-precession-nutation parts of the astrometric transformation chain.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:     date1  double       TDB as a 2-part...     date2  double       ...Julian Date (Note 1)     ebpv   double[2][3] Earth barycentric position/velocity (au, au/day)     ehp    double[3]    Earth heliocentric position (au)     x,y    double       CIP X,Y (components of unit vector)     s      double       the CIO locator s (radians)\n\nReturned:     astrom iauASTROM*   star-independent astrometry parameters:         pmt    double       PM time interval (SSB, Julian years)         eb     double[3]    SSB to observer (vector, au)         eh     double[3]    Sun to observer (unit vector)         em     double       distance from Sun to observer (au)         v      double[3]    barycentric observer velocity (vector, c)         bm1    double       sqrt(1-|v|^2): reciprocal of Lorenz factor         bpn    double[3][3] bias-precession-nutation matrix         along  double       unchanged         xpl    double       unchanged         ypl    double       unchanged         sphi   double       unchanged         cphi   double       unchanged         diurab double       unchanged         eral   double       unchanged         refa   double       unchanged         refb   double       unchanged\n\nNotes:\n\n1. The TDB date date1+date2 is a Julian Date, apportioned in any\nconvenient way between the two arguments.  For example,\nJD(TDB)=2450123.7 could be expressed in any of these ways, among\nothers:\n\n    date1          date2\n\n    2450123.7           0.0       (JD method)\n    2451545.0       -1421.3       (J2000 method)\n    2400000.5       50123.2       (MJD method)\n    2450123.5           0.2       (date & time method)\n\nThe JD method is the most natural and convenient to use in cases\nwhere the loss of several decimal digits of resolution is\nacceptable.  The J2000 method is best matched to the way the\nargument is handled internally and will deliver the optimum\nresolution.  The MJD method and the date & time methods are both\ngood compromises between resolution and convenience.  For most\napplications of this function the choice will not be at all\ncritical.\n\nTT can be used instead of TDB without any significant impact on\naccuracy.\n\n2. All the vectors are with respect to BCRS axes.\n\n3. In cases where the caller does not wish to provide the Earth\nephemeris and CIP/CIO, the function iauApci13 can be used instead\nof the present function.  This computes the required quantities\nusing other SOFA functions.\n\n4. This is one of several functions that inserts into the astrom\nstructure star-independent parameters needed for the chain of\nastrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\n\nThe various functions support different classes of observer and\nportions of the transformation chain:\n\n    functions         observer        transformation\n\niauApcg iauApcg13    geocentric      ICRS <-> GCRS\niauApci iauApci13    terrestrial     ICRS <-> CIRS\niauApco iauApco13    terrestrial     ICRS <-> observed\niauApcs iauApcs13    space           ICRS <-> GCRS\niauAper iauAper13    terrestrial     update Earth rotation\niauApio iauApio13    terrestrial     CIRS <-> observed\n\nThose with names ending in \"13\" use contemporary SOFA models to\ncompute the various ephemerides.  The others accept ephemerides\nsupplied by the caller.\n\nThe transformation from ICRS to GCRS covers space motion,\nparallax, light deflection, and aberration.  From GCRS to CIRS\ncomprises frame bias and precession-nutation.  From CIRS to\nobserved takes account of Earth rotation, polar motion, diurnal\naberration and parallax (unless subsumed into the ICRS <-> GCRS\ntransformation), and atmospheric refraction.\n\n5. The context structure astrom produced by this function is used by\niauAtciq* and iauAticq*.\n\nCalled:     iauApcg      astrometry parameters, ICRS-GCRS, geocenter     iauC2ixys    celestial-to-intermediate matrix, given X,Y and s\n\nThis revision:   2013 September 25\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauApci13",
    "page": "Docstrings",
    "title": "SOFA.iauApci13",
    "category": "function",
    "text": "For a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and geocentric CIRS coordinates.  The caller supplies the date, and SOFA models are used to predict the Earth ephemeris and CIP/CIO.\n\nThe parameters produced by this function are required in the parallax, light deflection, aberration, and bias-precession-nutation parts of the astrometric transformation chain.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    date1  double      TDB as a 2-part...    date2  double      ...Julian Date (Note 1)\n\nReturned:    astrom iauASTROM*  star-independent astrometry parameters:       pmt    double       PM time interval (SSB, Julian years)       eb     double[3]    SSB to observer (vector, au)       eh     double[3]    Sun to observer (unit vector)       em     double       distance from Sun to observer (au)       v      double[3]    barycentric observer velocity (vector, c)       bm1    double       sqrt(1-|v|^2): reciprocal of Lorenz factor       bpn    double[3][3] bias-precession-nutation matrix       along  double       unchanged       xpl    double       unchanged       ypl    double       unchanged       sphi   double       unchanged       cphi   double       unchanged       diurab double       unchanged       eral   double       unchanged       refa   double       unchanged       refb   double       unchanged    eo     double*     equation of the origins (ERA-GST)\n\nNotes:\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any\n\nconvenient way between the two arguments.  For example,    JD(TDB)=2450123.7 could be expressed in any of these ways, among    others:\n\n     date1          date2\n\n  2450123.7           0.0       (JD method)\n  2451545.0       -1421.3       (J2000 method)\n  2400000.5       50123.2       (MJD method)\n  2450123.5           0.2       (date & time method)\n\nThe JD method is the most natural and convenient to use in cases    where the loss of several decimal digits of resolution is    acceptable.  The J2000 method is best matched to the way the    argument is handled internally and will deliver the optimum    resolution.  The MJD method and the date & time methods are both    good compromises between resolution and convenience.  For most    applications of this function the choice will not be at all    critical.\n\nTT can be used instead of TDB without any significant impact on    accuracy.\n\nAll the vectors are with respect to BCRS axes.\nIn cases where the caller wishes to supply his own Earth\n\nephemeris and CIP/CIO, the function iauApci can be used instead    of the present function.\n\nThis is one of several functions that inserts into the astrom\n\nstructure star-independent parameters needed for the chain of    astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\n\nThe various functions support different classes of observer and    portions of the transformation chain:\n\n     functions         observer        transformation\n\n  iauApcg iauApcg13    geocentric      ICRS <-> GCRS\n  iauApci iauApci13    terrestrial     ICRS <-> CIRS\n  iauApco iauApco13    terrestrial     ICRS <-> observed\n  iauApcs iauApcs13    space           ICRS <-> GCRS\n  iauAper iauAper13    terrestrial     update Earth rotation\n  iauApio iauApio13    terrestrial     CIRS <-> observed\n\nThose with names ending in \"13\" use contemporary SOFA models to    compute the various ephemerides.  The others accept ephemerides    supplied by the caller.\n\nThe transformation from ICRS to GCRS covers space motion,    parallax, light deflection, and aberration.  From GCRS to CIRS    comprises frame bias and precession-nutation.  From CIRS to    observed takes account of Earth rotation, polar motion, diurnal    aberration and parallax (unless subsumed into the ICRS <-> GCRS    transformation), and atmospheric refraction.\n\nThe context structure astrom produced by this function is used by\n\niauAtciq* and iauAticq*.\n\nCalled:    iauEpv00     Earth position and velocity    iauPnm06a    classical NPB matrix, IAU 2006/2000A    iauBpn2xy    extract CIP X,Y coordinates from NPB matrix    iauS06       the CIO locator s, given X,Y, IAU 2006    iauApci      astrometry parameters, ICRS-CIRS    iauEors      equation of the origins, given NPB matrix and s\n\nThis revision:   2013 October 9\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAper",
    "page": "Docstrings",
    "title": "SOFA.iauAper",
    "category": "function",
    "text": "In the star-independent astrometry parameters, update only the Earth rotation angle, supplied by the caller explicitly.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    theta   double      Earth rotation angle (radians, Note 2)    astrom  iauASTROM*  star-independent astrometry parameters:       pmt    double       not used       eb     double[3]    not used       eh     double[3]    not used       em     double       not used       v      double[3]    not used       bm1    double       not used       bpn    double[3][3] not used       along  double       longitude + s\' (radians)       xpl    double       not used       ypl    double       not used       sphi   double       not used       cphi   double       not used       diurab double       not used       eral   double       not used       refa   double       not used       refb   double       not used\n\nReturned:    astrom  iauASTROM*  star-independent astrometry parameters:       pmt    double       unchanged       eb     double[3]    unchanged       eh     double[3]    unchanged       em     double       unchanged       v      double[3]    unchanged       bm1    double       unchanged       bpn    double[3][3] unchanged       along  double       unchanged       xpl    double       unchanged       ypl    double       unchanged       sphi   double       unchanged       cphi   double       unchanged       diurab double       unchanged       eral   double       \"local\" Earth rotation angle (radians)       refa   double       unchanged       refb   double       unchanged\n\nNotes:\n\nThis function exists to enable sidereal-tracking applications to\n\navoid wasteful recomputation of the bulk of the astrometry    parameters:  only the Earth rotation is updated.\n\nFor targets expressed as equinox based positions, such as\n\nclassical geocentric apparent (RA,Dec), the supplied theta can be    Greenwich apparent sidereal time rather than Earth rotation    angle.\n\nThe function iauAper13 can be used instead of the present\n\nfunction, and starts from UT1 rather than ERA itself.\n\nThis is one of several functions that inserts into the astrom\n\nstructure star-independent parameters needed for the chain of    astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\n\nThe various functions support different classes of observer and    portions of the transformation chain:\n\n     functions         observer        transformation\n\n  iauApcg iauApcg13    geocentric      ICRS <-> GCRS\n  iauApci iauApci13    terrestrial     ICRS <-> CIRS\n  iauApco iauApco13    terrestrial     ICRS <-> observed\n  iauApcs iauApcs13    space           ICRS <-> GCRS\n  iauAper iauAper13    terrestrial     update Earth rotation\n  iauApio iauApio13    terrestrial     CIRS <-> observed\n\nThose with names ending in \"13\" use contemporary SOFA models to    compute the various ephemerides.  The others accept ephemerides    supplied by the caller.\n\nThe transformation from ICRS to GCRS covers space motion,    parallax, light deflection, and aberration.  From GCRS to CIRS    comprises frame bias and precession-nutation.  From CIRS to    observed takes account of Earth rotation, polar motion, diurnal    aberration and parallax (unless subsumed into the ICRS <-> GCRS    transformation), and atmospheric refraction.\n\nThis revision:   2013 September 25\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAper13",
    "page": "Docstrings",
    "title": "SOFA.iauAper13",
    "category": "function",
    "text": "In the star-independent astrometry parameters, update only the Earth rotation angle.  The caller provides UT1, (n.b. not UTC).\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    ut11    double      UT1 as a 2-part...    ut12    double      ...Julian Date (Note 1)    astrom  iauASTROM*  star-independent astrometry parameters:    pmt    double       not used    eb     double[3]    not used    eh     double[3]    not used    em     double       not used    v      double[3]    not used    bm1    double       not used    bpn    double[3][3] not used    along  double       longitude + s\' (radians)    xpl    double       not used    ypl    double       not used    sphi   double       not used    cphi   double       not used    diurab double       not used    eral   double       not used    refa   double       not used    refb   double       not used\n\nReturned:    astrom  iauASTROM*  star-independent astrometry parameters:    pmt    double       unchanged    eb     double[3]    unchanged    eh     double[3]    unchanged    em     double       unchanged    v      double[3]    unchanged    bm1    double       unchanged    bpn    double[3][3] unchanged    along  double       unchanged    xpl    double       unchanged    ypl    double       unchanged    sphi   double       unchanged    cphi   double       unchanged    diurab double       unchanged    eral   double       \"local\" Earth rotation angle (radians)    refa   double       unchanged    refb   double       unchanged\n\nNotes:\n\nThe UT1 date (n.b. not UTC) ut11+ut12 is a Julian Date, apportioned in any convenient way between the arguments ut11 and ut12.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n  ut11           ut12\n2450123.7           0.0       (JD method)    2451545.0       -1421.3       (J2000 method)    2400000.5       50123.2       (MJD method)    2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  The date & time method is best matched to the algorithm used:  maximum precision is delivered when the ut11 argument is for 0hrs UT1 on the day in question and the ut12 argument lies in the range 0 to 1, or vice versa.\nIf the caller wishes to provide the Earth rotation angle itself, the function iauAper can be used instead.  One use of this technique is to substitute Greenwich apparent sidereal time and thereby to support equinox based transformations directly.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\n  functions         observer        transformation\niauApcg iauApcg13    geocentric      ICRS <-> GCRS    iauApci iauApci13    terrestrial     ICRS <-> CIRS    iauApco iauApco13    terrestrial     ICRS <-> observed    iauApcs iauApcs13    space           ICRS <-> GCRS    iauAper iauAper13    terrestrial     update Earth rotation    iauApio iauApio13    terrestrial     CIRS <-> observed\nThose with names ending in \"13\" use contemporary SOFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\n\nCalled:    iauAper      astrometry parameters: update ERA    iauEra00     Earth rotation angle, IAU 2000\n\nThis revision:   2013 September 25\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauAtciqz",
    "page": "Docstrings",
    "title": "SOFA.iauAtciqz",
    "category": "function",
    "text": "Quick ICRS to CIRS transformation, given precomputed star- independent astrometry parameters, and assuming zero parallax and proper motion.\n\nUse of this function is appropriate when efficiency is important and where many star positions are to be transformed for one date.  The star-independent parameters can be obtained by calling one of the functions iauApci[13], iauApcg[13], iauApco[13] or iauApcs[13].\n\nThe corresponding function for the case of non-zero parallax and proper motion is iauAtciq.\n\nThis function is part of the International Astronomical Union\'s SOFA (Standards of Fundamental Astronomy) software collection.\n\nStatus:  support function.\n\nGiven:    rc,dc  double     ICRS astrometric RA,Dec (radians)    astrom iauASTROM* star-independent astrometry parameters:       pmt    double       PM time interval (SSB, Julian years)       eb     double[3]    SSB to observer (vector, au)       eh     double[3]    Sun to observer (unit vector)       em     double       distance from Sun to observer (au)       v      double[3]    barycentric observer velocity (vector, c)       bm1    double       sqrt(1-|v|^2): reciprocal of Lorenz factor       bpn    double[3][3] bias-precession-nutation matrix       along  double       longitude + s\' (radians)       xpl    double       polar motion xp wrt local meridian (radians)       ypl    double       polar motion yp wrt local meridian (radians)       sphi   double       sine of geodetic latitude       cphi   double       cosine of geodetic latitude       diurab double       magnitude of diurnal aberration vector       eral   double       \"local\" Earth rotation angle (radians)       refa   double       refraction constant A (radians)       refb   double       refraction constant B (radians)\n\nReturned:    ri,di  double     CIRS RA,Dec (radians)\n\nNote:\n\nAll the vectors are with respect to BCRS axes.\n\nReferences:\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to    the Astronomical Almanac, 3rd ed., University Science Books    (2013).\n\nKlioner, Sergei A., \"A practical relativistic model for micro-    arcsecond astrometry in space\", Astr. J. 125, 1580-1597 (2003).\n\nCalled:    iauS2c       spherical coordinates to unit vector    iauLdsun     light deflection due to Sun    iauAb        stellar aberration    iauRxp       product of r-matrix and p-vector    iauC2s       p-vector to spherical    iauAnp       normalize angle into range +/- pi\n\nThis revision:   2013 October 9\n\nSOFA release 2018-01-30\n\nCopyright (C) 2018 IAU SOFA Board.  See notes at end.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#SOFA.iauLDBODY",
    "page": "Docstrings",
    "title": "SOFA.iauLDBODY",
    "category": "type",
    "text": "Body parameters for light deflection\n\n\n\n\n\n"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "SOFA.@checked_libSOFA.GRS80SOFA.SOFASOFA.WGS72SOFA.WGS84SOFA.evalSOFA.iauA2afSOFA.iauA2tfSOFA.iauASTROMSOFA.iauAbSOFA.iauAe2hdSOFA.iauAf2aSOFA.iauAnpSOFA.iauAnpmSOFA.iauApcgSOFA.iauApcg13SOFA.iauApciSOFA.iauApci13SOFA.iauApcoSOFA.iauApco13SOFA.iauApcsSOFA.iauApcs13SOFA.iauAperSOFA.iauAper13SOFA.iauApioSOFA.iauApio13SOFA.iauAtci13SOFA.iauAtciqSOFA.iauAtciqnSOFA.iauAtciqzSOFA.iauAtco13SOFA.iauAtic13SOFA.iauAticqSOFA.iauAticqnSOFA.iauAtio13SOFA.iauAtioqSOFA.iauAtoc13SOFA.iauAtoi13SOFA.iauAtoiqSOFA.iauBi00SOFA.iauBp00SOFA.iauBp06SOFA.iauBpn2xySOFA.iauC2i00aSOFA.iauC2i00bSOFA.iauC2i06aSOFA.iauC2ibpnSOFA.iauC2ixySOFA.iauC2ixysSOFA.iauC2sSOFA.iauC2t00aSOFA.iauC2t00bSOFA.iauC2t06aSOFA.iauC2tcioSOFA.iauC2teqxSOFA.iauC2tpeSOFA.iauC2txySOFA.iauCal2jdSOFA.iauCpSOFA.iauCpvSOFA.iauCrSOFA.iauD2dtfSOFA.iauD2tfSOFA.iauDatSOFA.iauDtdbSOFA.iauDtf2dSOFA.iauEceq06SOFA.iauEcm06SOFA.iauEe00SOFA.iauEe00aSOFA.iauEe00bSOFA.iauEe06aSOFA.iauEect00SOFA.iauEformSOFA.iauEo06aSOFA.iauEorsSOFA.iauEpbSOFA.iauEpb2jdSOFA.iauEpjSOFA.iauEpj2jdSOFA.iauEpv00SOFA.iauEqec06SOFA.iauEqeq94SOFA.iauEra00SOFA.iauFad03SOFA.iauFae03SOFA.iauFaf03SOFA.iauFaju03SOFA.iauFal03SOFA.iauFalp03SOFA.iauFama03SOFA.iauFame03SOFA.iauFane03SOFA.iauFaom03SOFA.iauFapa03SOFA.iauFasa03SOFA.iauFaur03SOFA.iauFave03SOFA.iauFk52hSOFA.iauFk5hipSOFA.iauFk5hzSOFA.iauFw2mSOFA.iauFw2xySOFA.iauG2icrsSOFA.iauGc2gdSOFA.iauGc2gdeSOFA.iauGd2gcSOFA.iauGd2gceSOFA.iauGmst00SOFA.iauGmst06SOFA.iauGmst82SOFA.iauGst00aSOFA.iauGst00bSOFA.iauGst06SOFA.iauGst06aSOFA.iauGst94SOFA.iauH2fk5SOFA.iauHd2aeSOFA.iauHd2paSOFA.iauHfk5zSOFA.iauIcrs2gSOFA.iauIrSOFA.iauJd2calSOFA.iauJdcalfSOFA.iauLDBODYSOFA.iauLdSOFA.iauLdnSOFA.iauLdsunSOFA.iauLteceqSOFA.iauLtecmSOFA.iauLteqecSOFA.iauLtpSOFA.iauLtpbSOFA.iauLtpeclSOFA.iauLtpequSOFA.iauNum00aSOFA.iauNum00bSOFA.iauNum06aSOFA.iauNumatSOFA.iauNut00aSOFA.iauNut00bSOFA.iauNut06aSOFA.iauNut80SOFA.iauNutm80SOFA.iauObl06SOFA.iauObl80SOFA.iauP06eSOFA.iauP2pvSOFA.iauP2sSOFA.iauPapSOFA.iauPasSOFA.iauPb06SOFA.iauPdpSOFA.iauPfw06SOFA.iauPlan94SOFA.iauPmSOFA.iauPmat00SOFA.iauPmat06SOFA.iauPmat76SOFA.iauPmpSOFA.iauPmpxSOFA.iauPmsafeSOFA.iauPnSOFA.iauPn00SOFA.iauPn00aSOFA.iauPn00bSOFA.iauPn06SOFA.iauPn06aSOFA.iauPnm00aSOFA.iauPnm00bSOFA.iauPnm06aSOFA.iauPnm80SOFA.iauPom00SOFA.iauPppSOFA.iauPpspSOFA.iauPr00SOFA.iauPrec76SOFA.iauPv2pSOFA.iauPv2sSOFA.iauPvdpvSOFA.iauPvmSOFA.iauPvmpvSOFA.iauPvppvSOFA.iauPvstarSOFA.iauPvtobSOFA.iauPvuSOFA.iauPvupSOFA.iauPvxpvSOFA.iauPxpSOFA.iauRefcoSOFA.iauRm2vSOFA.iauRv2mSOFA.iauRxSOFA.iauRxpSOFA.iauRxpvSOFA.iauRxrSOFA.iauRySOFA.iauRzSOFA.iauS00SOFA.iauS00aSOFA.iauS00bSOFA.iauS06SOFA.iauS06aSOFA.iauS2cSOFA.iauS2pSOFA.iauS2pvSOFA.iauS2xpvSOFA.iauSeppSOFA.iauSepsSOFA.iauSp00SOFA.iauStarpmSOFA.iauStarpvSOFA.iauSxpSOFA.iauSxpvSOFA.iauTaittSOFA.iauTaiut1SOFA.iauTaiutcSOFA.iauTcbtdbSOFA.iauTcgttSOFA.iauTdbtcbSOFA.iauTdbttSOFA.iauTf2aSOFA.iauTf2dSOFA.iauTporsSOFA.iauTporvSOFA.iauTpstsSOFA.iauTpstvSOFA.iauTpxesSOFA.iauTpxevSOFA.iauTrSOFA.iauTrxpSOFA.iauTrxpvSOFA.iauTttaiSOFA.iauTttcgSOFA.iauTttdbSOFA.iauTtut1SOFA.iauUt1taiSOFA.iauUt1ttSOFA.iauUt1utcSOFA.iauUtctaiSOFA.iauUtcut1SOFA.iauXy06SOFA.iauXys00aSOFA.iauXys00bSOFA.iauXys06aSOFA.iauZpSOFA.iauZpvSOFA.iauZrSOFA.includeSOFA.libsofa_c"
},

]}
