var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#Faker-1",
    "page": "Readme",
    "title": "Faker",
    "category": "section",
    "text": "Generator of fake data for julia .(Image: Build Status) (Image: Faker) (Image: GitHub license)This package is a library that generates fake data."
},

{
    "location": "#Roadmap-1",
    "page": "Readme",
    "title": "Roadmap",
    "category": "section",
    "text": "Below are some of the features that are planned to be added in future versions of Faker.jl once version 1.0 of the language is released."
},

{
    "location": "#All-contributions-and-suggestions-are-welcome-!!!!-1",
    "page": "Readme",
    "title": "All contributions and suggestions are welcome !!!!",
    "category": "section",
    "text": ""
},

{
    "location": "#Version-0.1.0-1",
    "page": "Readme",
    "title": "Version 0.1.0",
    "category": "section",
    "text": "Julia version 1.0 syntax update"
},

{
    "location": "#Version-0.1.1-1",
    "page": "Readme",
    "title": "Version 0.1.1",
    "category": "section",
    "text": "Unicode symbol generator"
},

{
    "location": "#Version-0.1.2-1",
    "page": "Readme",
    "title": "Version 0.1.2",
    "category": "section",
    "text": "Language support, generation in the formats of each languagePossible syntax :   Faker.language(\"en_US\")   - English (United States)\n   ```\n\n#### Version 0.1.3\n  + Possibility of creating a generator\n  + Implementation of the seed () method, seed for the random number generator. Calling the same script twice with the same seed will produce the same results.\n  > Possible syntax :\n  ```bash\n  Fake.seed(4321)\n  ```\n#### Version 0.1.4\n  + Modularization of the method Faker.simple_profile()\n  > Possible syntax :\n  ```bash\n  Faker.simple_profile(\"name,birthdate\")   # => (\"name\"=>\"Benito\",\"birthdate\"=>\"1997-3-16\")\n  ```\n  + Modularization of the method Faker.profile()\n  > Possible syntax :\n  ```bash\n  Faker.profile(\"blood_group,job\")   # => (\"blood_group\"=>\"AB-\",\"job\"=>\"Radiographer)\n  ```\n\nInstalling\n----------bashStable versionPkg.add(\"Faker\")Development versionPkg.clone(\"git://github.com/codeneomatrix/Faker.jl.git\")\n## Usage\n-----julia using FakerFaker.email() #  => \"kirsten.greenholt@corkeryfisher.info\"\nNOTE: While Faker generates data at random, returned values are not guaranteed to be unique.\n\n\n## Base\n-----julia Faker.randomdigit()                                        # => 9 Faker.randomdigitnotnull()                               # => 1 Faker.randomdigitorempty()                               # => 5 Faker.randomnumber(digits= 1)                              # => 31730 Faker.randomint(min=0, max=9999)                           # => 7545 Faker.randomizenbelements(number=10, le=false, ge=false)  # => 8.0 Faker.randomletter()                                       # => N Faker.random_element((\"a\", \"b\", \"b\"))                       # => b Faker.lexify(\"????\")                                        # => cIxw Faker.numerify(\"####\")                                      # => 643 Faker.bothify(\"## ??\")                                      # => 92 Hu\n### Address\n-----------------\njuliaFaker.stateabbr()                                 # => AP Faker.latitude()                                   # => -74.518224 Faker.streetname()                                # => Green Knoll Faker.address()                                    # => 741 Drucilla Lights Marlenport, VT 54198-4463 Faker.streetaddress()                             # => 4630 Kling Throughway Faker.postcode()                                   # => 18604-5538 Faker.longitude()                                  # => 41.536069 Faker.country()                                    # => Montserrat Faker.geocoordinate(center=\"None\", radius=0.001)  # => 48.396071 Faker.secondaryaddress()                          # => Apt. 621 Faker.cityprefix()                                # => Lake Faker.citysuffix()                                # => ville Faker.buildingnumber()                            # => 7065 Faker.city()                                       # => West Donato Faker.state()                                      # => WestVirginia\n\n\n### Company\n-----------------\njuliaFaker.company()                                 # => Kohler-Ward Faker.companysuffix()                          # => Inc Faker.catchphrase()                            # => Multi-layered user-facing functionalities Faker.bs()                                      # => WestVirginia\n### Date\n---------------------\njulia Faker.datetimead()                                           # => 1446-03-17 04:03:47 Faker.months()                                                 # => 10 Faker.ampm()                                                  # => PM Faker.iso8601()                                                # => 1986-05-02T21:01:04 Faker.datetime()                                              # => 1981-10-29 21:56:29 Faker.monthname()                                             # => November Faker.dayofweek()                                            # => Thursday Faker.dayofmonth()                                           # => 14 Faker.datetimebetween(\"-30y\", \"now\")                         # => 1990-01-30 11:47:01 Faker.time(\"H:M:S\")                                            # => 21:44:43 Faker.unixtime()                                              # => 711770812 Faker.timezone()                                               # => Atlantic/Reykjavik Faker.century()                                                # => XV Faker.date(\"Y-m-d\")                                            # => 1998-09-11 Faker.year()                                                   # => 1998 Faker.datetimethiscentury(beforenow=true, afternow=false) # => 1941-12-05 15:52:02 Faker.datetimethisdecade(beforenow=true, afternow=false)  # => 2013-02-24 18:47:46 Faker.datetimethisyear(beforenow=true, afternow=false)    # => 2013-04-22 14:51:26 Faker.datetimethismonth(beforenow=true, afternow=false)   # => 2014-04-02 08:38:48### Internet\n---------------\njuliaFaker.email()                                   # => \"eliza@mann.net\" Faker.freeemail()                              # => \"freddy@gmail.com\" Faker.safeemail()                              # => \"christelle@example.org\" Faker.username()                               # => \"melissa.price\" Faker.domainname()                             # => \"effertz.info\" Faker.domainword()                             # => \"haleyziemann\" Faker.domainsuffix()                           # => \"info\" Faker.ipv4()                                    # => \"24.29.18.175\" Faker.ipv6()                                    # => \"ac5f:d696:3807:1d72:2eb5:4e81:7d2b:e1df\" Faker.uri()                                     # => \"http://osinski.com/register/\" Faker.url()                                     # => \"http://schmeler.com/\"\n### Lorem\n---------------\njuliaFaker.text(maxnbchars=200)                                    # => Et dolor voluptates quaerat. Natus qui consequatur dolor facere. Tenetur repudiandae totam id vitae aut. Faker.sentence(numberwords=6, variablenbwords=true)                                # => Alias officiis dignissimos maxime nam ad distinctio. Faker.word()                                    # => qui Faker.paragraphs()                              # => [u\'Numquam cupiditate omnis impedit nesciunt laboriosam. Vitae hic iste qui deleniti quo incidunt ratione.                        Natus ullam libero dolore sunt.\', u\'Veritatis nostrum quod dolorem soluta cupiditate qui incidunt.                        Rerum minus commodi repreh enderit. Sed in dolor quia ut est. Impedit eos nihil aut m olestiae                        reiciendis.\', u\'Ullam dolor molestias sit officii s expedita fuga repellat. Et fuga sequi sit. Aperiam                       quaer at sint quasi vel nam.\'] Faker.words(numberwords=3)                                   # => [u\'corrupti\', u\'ipsum\', u\'inventore\'] Faker.paragraph(number=3)                               # => Voluptatibus quae nihil aut amet quos. Vitae fugiat adipisci inventore eaque adipisci quia. Nostrum non et numquam illum. Sed id dolore quia. Faker.sentences(number_sentences=3)                               # => [u\'Ipsam rerum molestias quod magni totam pariatur enim.\',u\'Dolores perspiciatis consequatur porro                       recusandae sit voluptatem sint accusamus.\', u\'Repellendus explicabo delectus ad #Name\n\n### PhoneNumber\n---------------------\n\nPhone numbers may be in any of the following formats:\n\n  * +33(3)3333333333\n  * +33(3)3333333333\n  * 03333333333\n  * 03333333333\n  * 333-333-3333\n  * (333)333-3333\n  * 1-333-333-3333\n  * 333.333.3333\n  * 333-333-3333\n  * (333)333-3333\n  * 1-333-333-3333\n  * 333-333-3333x333\n\n(Don\'t let the example output below fool you - any format can be returned at random.)\njuliaFaker.phone_number()                            # => 456-089-3337x803\n\n### Misc\n---------------------julia Faker.password()                                # => cQYVB)X%0$ Faker.locale()                                  # => enSE Faker.nullboolean()                            # => True Faker.countrycode()                            # => DO Faker.languagecode()                           # => ru Faker.boolean()                                 # => True\n\n### Color\n---------------------julia Faker.colorname()                              # => DarkMagenta Faker.safecolorname()                         # => purple Faker.hexcolor()                               # => #77cc00 Faker.safehexcolor()                          # => #16a100 Faker.rgbcolorlist()                          # => (230, 94, 69) Faker.rgbcolor()                               # => 213,100,110 Faker.rgbcss_color()                           # => rgb(88,244,35)\n\n### Credit_card\n---------------------julia Faker.creditcardsecuritycode()               # => 768 Faker.creditcardfull()                        # => VISA 16 digit Keon Marvin 4493818436107305 CVC 976 Faker.creditcardnumber()                      # => 4916619442820082 Faker.creditcardprovider()                    # => American Express Faker.generatenumber(\"52\",16)                  # => 5268029839131090\n### File\n---------------------julia Faker.mimetype()                               # => video/quicktime Faker.fileextension()                          # => css Faker.file_name()                               # => sUwb.flac\n\n### Person\n---------------------julia Faker.firstname()                              # => Cayden Faker.lastname()                               # => Hickle Faker.prefixe()                                 # => Mrs\n### Profile\n---------------------julia Faker.simpleprofile()                          # => (\"name\"=>\"Benito\",\"mail\"=>\"Sandra66@hotmail.com\",\"username\"=>\"nGamez\",                                                       \"birthdate\"=>\"1997-3-16\",\"sex\"=>\"F\",                                                       \"address\"=>\"Pasaje Morelos 373 572 San Carlota de la Montaña,BC 47785\") Faker.profile()                                 # => (\"bloodgroup\"=>\"AB-\",\"job\"=>\"Radiographer, therapeutic\",                                                       \"residence\"=>\"Ampliación Escobar 515 Interior 017 San Carlota de la Montaña,                                                       Q. ROO 75906\",\"company\"=>\"Bañuelos-Delgadillo y Asociados\",                                                       \"website\"=>Any[\"http://bdya.com/\",\"http://www.mgyc.com/\"],                                                       \"current_location\"=>(4.50390625,17.015625))\n### Job\n---------------------julia Faker.job()                                     # => Geneticist, molecular\n### User_agent\n---------------------julia Faker.macprocessor()                           # => U; PPC Faker.linuxprocessor()                         # => x8664 Faker.useragent()                              # => safari Faker.windowsplatformtoken()                  # => Windows NT 6.0 Faker.linuxplatformtoken()                    # => X11; Linux x8664 Faker.macplatformtoken()                      # => Macintosh; U; PPC Mac OS X 1065 Faker.chrome()                                  # => Mozilla/5.0 (X11; Linux x8664) AppleWebKit/5311 (KHTML, like Gecko)                                          # => Chrome/14.0.867.0 Safari/5311 Faker.firefox()                                 # => Mozilla/5.0 (Macintosh; U; PPC Mac OS X 1087; rv:1.9.3.20)                                    # => Gecko/2002-10-25 15:36:53 Firefox/7.0 Faker.safari()                                  # => Mozilla/5.0 (Macintosh; PPC Mac OS X 1059 rv:3.0; it-IT)                                             # => AppleWebKit/532.42.3 (KHTML, like Gecko) Version/5.0.1 Safari/532.42.3 Faker.opera()                                   # => Opera/9.97.(Windows CE; sl-SI) Presto/2.9.182 Version/12.00) Faker.internet_explorer()                       # => Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 5.01; Trident/5.0) ```"
},

{
    "location": "#License-1",
    "page": "Readme",
    "title": "License",
    "category": "section",
    "text": "This code is free to use under the terms of the MIT license."
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Faker.CreditCardFaker.FakerFaker.addressFaker.all_colorsFaker.am_pmFaker.apFaker.application_mime_typesFaker.audio_file_extenstionsFaker.audio_mime_typesFaker.booleanFaker.bothifyFaker.bsFaker.bsWordsFaker.building_numberFaker.building_number_formatsFaker.catch_phraseFaker.catch_phrase_wordsFaker.centuriesFaker.centuryFaker.chromeFaker.cityFaker.city_adjetiveFaker.city_adjetivesFaker.city_formatsFaker.city_prefixFaker.city_prefixesFaker.city_suffixFaker.city_suffixiesFaker.color_nameFaker.companyFaker.company_emailFaker.company_preffixesFaker.company_prefixFaker.company_suffixFaker.company_suffixesFaker.countriesFaker.countryFaker.country_codeFaker.credit_card_fullFaker.credit_card_numberFaker.credit_card_providerFaker.credit_card_security_codeFaker.credit_card_typeFaker.credit_card_typesFaker.dateFaker.date_timeFaker.date_time_adFaker.date_time_betweenFaker.date_time_this_centuryFaker.date_time_this_decadeFaker.date_time_this_monthFaker.date_time_this_yearFaker.day_of_monthFaker.day_of_weekFaker.default_localeFaker.domain_nameFaker.domain_suffixFaker.domain_wordFaker.emailFaker.email_formatsFaker.evalFaker.fake_domain_emailFaker.file_extensionFaker.file_nameFaker.firefoxFaker.first_nameFaker.first_namesFaker.fn_hashesFaker.fn_lnFaker.formatsFaker.formatscompFaker.free_domain_emailFaker.free_emailFaker.free_email_domainFaker.free_email_domainsFaker.generate_numberFaker.geo_coordinateFaker.hex_colorFaker.image_file_extenstionsFaker.image_mime_typesFaker.image_placeholder_servicesFaker.image_urlFaker.includeFaker.internet_explorerFaker.internet_rngFaker.ipv4Faker.ipv6Faker.iso8601Faker.jobFaker.jobsFaker.langsFaker.language_codeFaker.language_codesFaker.last_nameFaker.last_namesFaker.latitudeFaker.lexifyFaker.linux_platform_tokenFaker.linux_processorFaker.linux_processorsFaker.ln_fnFaker.ln_questionFaker.localeFaker.localizedFaker.longitudeFaker.luhn_lookupFaker.mac_addressFaker.mac_platform_tokenFaker.mac_processorFaker.mac_processorsFaker.message_mime_typesFaker.mime_typeFaker.model_mime_typesFaker.month_nameFaker.monthsFaker.multipart_mime_typesFaker.null_booleanFaker.numerifyFaker.operaFaker.paragraphFaker.paragraphsFaker.passwordFaker.phone_numberFaker.postcodeFaker.postcode_formatsFaker.prefix_amexFaker.prefix_dinersFaker.prefix_discoverFaker.prefix_jcb15Faker.prefix_jcb16Faker.prefix_mastercardFaker.prefix_visaFaker.prefix_voyagerFaker.prefixeFaker.prefixesFaker.profileFaker.random_digitFaker.random_digit_not_nullFaker.random_digit_not_null_or_emptyFaker.random_digit_or_emptyFaker.random_elementFaker.random_intFaker.random_letterFaker.random_numberFaker.randomize_nb_elementsFaker.reseed_internetFaker.rgb_colorFaker.rgb_color_listFaker.rgb_css_colorFaker.safariFaker.safe_color_nameFaker.safe_colorsFaker.safe_emailFaker.safe_email_tldsFaker.safe_hex_colorFaker.secondary_addressFaker.secondary_address_formatsFaker.sentenceFaker.sentencesFaker.simple_profileFaker.stateFaker.state_abbrFaker.statesFaker.street_addressFaker.street_nameFaker.street_name_formatsFaker.street_prefixFaker.street_prefixesFaker.textFaker.text_file_extensionsFaker.text_mime_typesFaker.timeFaker.timeszonFaker.timezoneFaker.tldsFaker.unix_timeFaker.uriFaker.uri_extensionFaker.uri_extensionsFaker.uri_formatsFaker.uri_pageFaker.uri_pagesFaker.uri_pathFaker.uri_pathsFaker.urlFaker.url_formatsFaker.user_agentFaker.user_agentsFaker.user_nameFaker.user_name_formatsFaker.video_file_extensionsFaker.video_mime_typesFaker.windows_platform_tokenFaker.windows_platform_tokensFaker.wordFaker.word_listFaker.wordsFaker.yearFaker.year_topFaker.zip_codeFaker.zip_codes"
},

]}
