var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#LocalCoverage-1",
    "page": "Readme",
    "title": "LocalCoverage",
    "category": "section",
    "text": "(Image: Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.) (Image: Build Status) (Image: Coverage Status) (Image: codecov.io)This is a collection of trivial functions to facilitate generating and exploring test coverage information for Julia packages locally, without using any remote/cloud services."
},

{
    "location": "#Installation-1",
    "page": "Readme",
    "title": "Installation",
    "category": "section",
    "text": "This package is not (yet) registered. You need to install it withPkg.clone(\"https://github.com/tpapp/LocalCoverage.jl.git\")Generating HTML needs the genhtml utility, which is part of LCOV. On Debian/Ubuntu systems, usesudo apt install lcovNote that the code in this package assumes a reasonably recent lcov version when calling genhtml, ideally 1.13, but 1.12 should work too. This only checked when building this package, and does not prevent installation, only emits a warning. See the discussion of issue #1 for a workaround."
},

{
    "location": "#Usage-1",
    "page": "Readme",
    "title": "Usage",
    "category": "section",
    "text": "using LocalCoverage\ngenerate_coverage(pkg)  # generate coverage information\nopen_coverage(pkg)      # open in a browser\nclean_coverage(pkg)     # cleanup"
},

{
    "location": "autodocs/#LocalCoverage.COVDIR",
    "page": "Docstrings",
    "title": "LocalCoverage.COVDIR",
    "category": "constant",
    "text": "Directory for coverage results.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LocalCoverage.LCOVINFO",
    "page": "Docstrings",
    "title": "LocalCoverage.LCOVINFO",
    "category": "constant",
    "text": "Coverage tracefile.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LocalCoverage.clean_coverage",
    "page": "Docstrings",
    "title": "LocalCoverage.clean_coverage",
    "category": "function",
    "text": "clean_coverage(pkg)\n\n\nClean up after generate_coverage.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LocalCoverage.generate_coverage",
    "page": "Docstrings",
    "title": "LocalCoverage.generate_coverage",
    "category": "function",
    "text": "generate_coverage(pkg; genhtml)\n\n\nGenerate a coverage report for package pkg.\n\nWhen genhtml, the corresponding external command will be called to generate a HTML report. This can be found in eg the package lcov on Debian/Ubuntu.\n\n*.cov files are near the source files as generated by Julia, everything else is placed in Pkg.dir(pkg, \"coverage\"). The summary is in Pkg.dir(pkg, \"coverage\", \"lcov.info\").\n\nUse clean_coverage for cleaning.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#LocalCoverage.open_coverage",
    "page": "Docstrings",
    "title": "LocalCoverage.open_coverage",
    "category": "function",
    "text": "open_coverage(pkg)\n\n\nOpen the HTML coverage results in a browser for pkg if they exist.\n\nSee generate_coverage.\n\n\n\n\n\n"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "LocalCoverage.COVDIRLocalCoverage.LCOVINFOLocalCoverage.LocalCoverageLocalCoverage.clean_coverageLocalCoverage.evalLocalCoverage.generate_coverageLocalCoverage.includeLocalCoverage.open_coverage"
},

]}
