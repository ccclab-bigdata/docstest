var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": ""
},

{
    "location": "#FixedPointNumbers-1",
    "page": "Readme",
    "title": "FixedPointNumbers",
    "category": "section",
    "text": "(Image: Build Status)(Image: codecov.io)This library implements fixed-point number types.  A [fixed-point number][wikipedia] represents a fractional, or non-integral, number.  In contrast with the more widely known floating-point numbers, with fixed-point numbers the decimal point doesn\'t \"float\": fixed-point numbers are effectively integers that are interpreted as being scaled by a constant factor.  Consequently, they have a fixed number of digits (bits) after the decimal (radix) point.Fixed-point numbers can be used to perform arithmetic. Another practical application is to implicitly rescale integers without modifying the underlying representation.This library exports two categories of fixed-point types. Fixed-point types are used like any other number: they can be added, multiplied, raised to a power, etc. In some cases these operations result in conversion to floating-point types."
},

{
    "location": "#Type-hierarchy-and-interpretation-1",
    "page": "Readme",
    "title": "Type hierarchy and interpretation",
    "category": "section",
    "text": "This library defines an abstract type FixedPoint{T <: Integer, f} as a subtype of Real. The parameter T is the underlying machine representation and f is the number of fraction bits.For T<:Signed (a signed integer), there is a fixed-point type Fixed{T, f}; for T<:Unsigned (an unsigned integer), there is the Normed{T, f} type. However, there are slight differences in behavior that go beyond signed/unsigned distinctions.The Fixed{T,f} types use 1 bit for sign, and f bits to represent the fraction. For example, Fixed{Int8,7} uses 7 bits (all bits except the sign bit) for the fractional part. The value of the number is interpreted as if the integer representation has been divided by 2^f. Consequently, Fixed{Int8,7} numbers x satisfy-1.0 = -128/128 ≤ x ≤ 127/128 ≈ 0.992.because the range of Int8 is from -128 to 127.In contrast, the Normed{T,f}, with f fraction bits, map the closed interval [0.0,1.0] to the span of numbers with f bits.  For example, the N0f8 type (aliased to Normed{UInt8,8}) is represented internally by a UInt8, and makes 0x00 equivalent to 0.0 and 0xff to 1.0. Consequently, Normed numbers are scaled by 2^f-1 rather than 2^f.  The type aliases N6f10, N4f12, N2f14, and N0f16 are all based on UInt16 and reach the value 1.0 at 10, 12, 14, and 16 bits, respectively (0x03ff, 0x0fff, 0x3fff, and 0xffff). The NXfY notation is used for compact printing and the fY component informs about the number of fractional bits and X+Y equals the number of underlying bits used.To construct such a number, use convert(N4f12, 1.3), N4f12(1.3), Normed{UInt16,12}(1.3), or reinterpret(N4f12, 0x14cc). The latter syntax means to construct a N4f12 (it ends in uf12) from the UInt16 value 0x14cc.More generally, an arbitrary number of bits from any of the standard unsigned integer widths can be used for the fractional part.  For example: Normed{UInt32,16}, Normed{UInt64,3}, Normed{UInt128,7}.[wikipedia]: http://en.wikipedia.org/wiki/Fixed-point_arithmetic"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "FixedPointNumbers.FixedFixedPointNumbers.FixedPointFixedPointNumbers.FixedPointNumbersFixedPointNumbers.N0f16FixedPointNumbers.N0f32FixedPointNumbers.N0f64FixedPointNumbers.N0f8FixedPointNumbers.N10f22FixedPointNumbers.N10f54FixedPointNumbers.N10f6FixedPointNumbers.N11f21FixedPointNumbers.N11f5FixedPointNumbers.N11f53FixedPointNumbers.N12f20FixedPointNumbers.N12f4FixedPointNumbers.N12f52FixedPointNumbers.N13f19FixedPointNumbers.N13f3FixedPointNumbers.N13f51FixedPointNumbers.N14f18FixedPointNumbers.N14f2FixedPointNumbers.N14f50FixedPointNumbers.N15f1FixedPointNumbers.N15f17FixedPointNumbers.N15f49FixedPointNumbers.N16f0FixedPointNumbers.N16f16FixedPointNumbers.N16f48FixedPointNumbers.N17f15FixedPointNumbers.N17f47FixedPointNumbers.N18f14FixedPointNumbers.N18f46FixedPointNumbers.N19f13FixedPointNumbers.N19f45FixedPointNumbers.N1f15FixedPointNumbers.N1f31FixedPointNumbers.N1f63FixedPointNumbers.N1f7FixedPointNumbers.N20f12FixedPointNumbers.N20f44FixedPointNumbers.N21f11FixedPointNumbers.N21f43FixedPointNumbers.N22f10FixedPointNumbers.N22f42FixedPointNumbers.N23f41FixedPointNumbers.N23f9FixedPointNumbers.N24f40FixedPointNumbers.N24f8FixedPointNumbers.N25f39FixedPointNumbers.N25f7FixedPointNumbers.N26f38FixedPointNumbers.N26f6FixedPointNumbers.N27f37FixedPointNumbers.N27f5FixedPointNumbers.N28f36FixedPointNumbers.N28f4FixedPointNumbers.N29f3FixedPointNumbers.N29f35FixedPointNumbers.N2f14FixedPointNumbers.N2f30FixedPointNumbers.N2f6FixedPointNumbers.N2f62FixedPointNumbers.N30f2FixedPointNumbers.N30f34FixedPointNumbers.N31f1FixedPointNumbers.N31f33FixedPointNumbers.N32f0FixedPointNumbers.N32f32FixedPointNumbers.N33f31FixedPointNumbers.N34f30FixedPointNumbers.N35f29FixedPointNumbers.N36f28FixedPointNumbers.N37f27FixedPointNumbers.N38f26FixedPointNumbers.N39f25FixedPointNumbers.N3f13FixedPointNumbers.N3f29FixedPointNumbers.N3f5FixedPointNumbers.N3f61FixedPointNumbers.N40f24FixedPointNumbers.N41f23FixedPointNumbers.N42f22FixedPointNumbers.N43f21FixedPointNumbers.N44f20FixedPointNumbers.N45f19FixedPointNumbers.N46f18FixedPointNumbers.N47f17FixedPointNumbers.N48f16FixedPointNumbers.N49f15FixedPointNumbers.N4f12FixedPointNumbers.N4f28FixedPointNumbers.N4f4FixedPointNumbers.N4f60FixedPointNumbers.N50f14FixedPointNumbers.N51f13FixedPointNumbers.N52f12FixedPointNumbers.N53f11FixedPointNumbers.N54f10FixedPointNumbers.N55f9FixedPointNumbers.N56f8FixedPointNumbers.N57f7FixedPointNumbers.N58f6FixedPointNumbers.N59f5FixedPointNumbers.N5f11FixedPointNumbers.N5f27FixedPointNumbers.N5f3FixedPointNumbers.N5f59FixedPointNumbers.N60f4FixedPointNumbers.N61f3FixedPointNumbers.N62f2FixedPointNumbers.N63f1FixedPointNumbers.N64f0FixedPointNumbers.N6f10FixedPointNumbers.N6f2FixedPointNumbers.N6f26FixedPointNumbers.N6f58FixedPointNumbers.N7f1FixedPointNumbers.N7f25FixedPointNumbers.N7f57FixedPointNumbers.N7f9FixedPointNumbers.N8f0FixedPointNumbers.N8f24FixedPointNumbers.N8f56FixedPointNumbers.N8f8FixedPointNumbers.N9f23FixedPointNumbers.N9f55FixedPointNumbers.N9f7FixedPointNumbers.NormedFixedPointNumbers.Q0f15FixedPointNumbers.Q0f31FixedPointNumbers.Q0f63FixedPointNumbers.Q0f7FixedPointNumbers.Q10f21FixedPointNumbers.Q10f5FixedPointNumbers.Q10f53FixedPointNumbers.Q11f20FixedPointNumbers.Q11f4FixedPointNumbers.Q11f52FixedPointNumbers.Q12f19FixedPointNumbers.Q12f3FixedPointNumbers.Q12f51FixedPointNumbers.Q13f18FixedPointNumbers.Q13f2FixedPointNumbers.Q13f50FixedPointNumbers.Q14f1FixedPointNumbers.Q14f17FixedPointNumbers.Q14f49FixedPointNumbers.Q15f0FixedPointNumbers.Q15f16FixedPointNumbers.Q15f48FixedPointNumbers.Q16f15FixedPointNumbers.Q16f47FixedPointNumbers.Q17f14FixedPointNumbers.Q17f46FixedPointNumbers.Q18f13FixedPointNumbers.Q18f45FixedPointNumbers.Q19f12FixedPointNumbers.Q19f44FixedPointNumbers.Q1f14FixedPointNumbers.Q1f30FixedPointNumbers.Q1f6FixedPointNumbers.Q1f62FixedPointNumbers.Q20f11FixedPointNumbers.Q20f43FixedPointNumbers.Q21f10FixedPointNumbers.Q21f42FixedPointNumbers.Q22f41FixedPointNumbers.Q22f9FixedPointNumbers.Q23f40FixedPointNumbers.Q23f8FixedPointNumbers.Q24f39FixedPointNumbers.Q24f7FixedPointNumbers.Q25f38FixedPointNumbers.Q25f6FixedPointNumbers.Q26f37FixedPointNumbers.Q26f5FixedPointNumbers.Q27f36FixedPointNumbers.Q27f4FixedPointNumbers.Q28f3FixedPointNumbers.Q28f35FixedPointNumbers.Q29f2FixedPointNumbers.Q29f34FixedPointNumbers.Q2f13FixedPointNumbers.Q2f29FixedPointNumbers.Q2f5FixedPointNumbers.Q2f61FixedPointNumbers.Q30f1FixedPointNumbers.Q30f33FixedPointNumbers.Q31f0FixedPointNumbers.Q31f32FixedPointNumbers.Q32f31FixedPointNumbers.Q33f30FixedPointNumbers.Q34f29FixedPointNumbers.Q35f28FixedPointNumbers.Q36f27FixedPointNumbers.Q37f26FixedPointNumbers.Q38f25FixedPointNumbers.Q39f24FixedPointNumbers.Q3f12FixedPointNumbers.Q3f28FixedPointNumbers.Q3f4FixedPointNumbers.Q3f60FixedPointNumbers.Q40f23FixedPointNumbers.Q41f22FixedPointNumbers.Q42f21FixedPointNumbers.Q43f20FixedPointNumbers.Q44f19FixedPointNumbers.Q45f18FixedPointNumbers.Q46f17FixedPointNumbers.Q47f16FixedPointNumbers.Q48f15FixedPointNumbers.Q49f14FixedPointNumbers.Q4f11FixedPointNumbers.Q4f27FixedPointNumbers.Q4f3FixedPointNumbers.Q4f59FixedPointNumbers.Q50f13FixedPointNumbers.Q51f12FixedPointNumbers.Q52f11FixedPointNumbers.Q53f10FixedPointNumbers.Q54f9FixedPointNumbers.Q55f8FixedPointNumbers.Q56f7FixedPointNumbers.Q57f6FixedPointNumbers.Q58f5FixedPointNumbers.Q59f4FixedPointNumbers.Q5f10FixedPointNumbers.Q5f2FixedPointNumbers.Q5f26FixedPointNumbers.Q5f58FixedPointNumbers.Q60f3FixedPointNumbers.Q61f2FixedPointNumbers.Q62f1FixedPointNumbers.Q63f0FixedPointNumbers.Q6f1FixedPointNumbers.Q6f25FixedPointNumbers.Q6f57FixedPointNumbers.Q6f9FixedPointNumbers.Q7f0FixedPointNumbers.Q7f24FixedPointNumbers.Q7f56FixedPointNumbers.Q7f8FixedPointNumbers.Q8f23FixedPointNumbers.Q8f55FixedPointNumbers.Q8f7FixedPointNumbers.Q9f22FixedPointNumbers.Q9f54FixedPointNumbers.Q9f6FixedPointNumbers.ShortIntsFixedPointNumbers.TreduceFixedPointNumbers.UFFixedPointNumbers._convertFixedPointNumbers._iotypealiasFixedPointNumbers._log2_10FixedPointNumbers._unsafe_truncFixedPointNumbers.doneFixedPointNumbers.evalFixedPointNumbers.floattypeFixedPointNumbers.includeFixedPointNumbers.nbitsfracFixedPointNumbers.nextFixedPointNumbers.rawoneFixedPointNumbers.rawtypeFixedPointNumbers.scaledualFixedPointNumbers.showtypeFixedPointNumbers.signbitsFixedPointNumbers.startFixedPointNumbers.throw_converterrorFixedPointNumbers.typecharFixedPointNumbers.widen1"
},

]}
