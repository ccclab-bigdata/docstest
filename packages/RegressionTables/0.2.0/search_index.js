var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": "(Image: Build Status) (Image: Coverage Status) (Image: codecov.io)"
},

{
    "location": "#RegressionTables.jl-1",
    "page": "Readme",
    "title": "RegressionTables.jl",
    "category": "section",
    "text": "This package provides publication-quality regression tables for use with FixedEffectModels.jl and GLM.jl.In its objective it is similar to  (and heavily inspired by) the Stata command esttab and the R package stargazer.To install the package, type in the Julia command promptPkg.add(\"RegressionTables\")"
},

{
    "location": "#A-brief-demonstration-1",
    "page": "Readme",
    "title": "A brief demonstration",
    "category": "section",
    "text": "using RegressionTables, DataFrames, FixedEffectModels, RDatasets\r\n\r\ndf = dataset(\"datasets\", \"iris\")\r\ndf[:SpeciesDummy] = categorical(df[:Species])\r\n\r\nrr1 = reg(df, @model(SepalLength ~ SepalWidth   , fe = SpeciesDummy))\r\nrr2 = reg(df, @model(SepalLength ~ SepalWidth + PetalLength   , fe = SpeciesDummy))\r\nrr3 = reg(df, @model(SepalLength ~ SepalWidth + PetalLength + PetalWidth  , fe = SpeciesDummy))\r\nrr4 = reg(df, @model(SepalWidth ~ SepalLength + PetalLength + PetalWidth  , fe = SpeciesDummy))\r\n\r\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput())yields----------------------------------------------------------\r\n                         SepalLength            SepalWidth\r\n               ------------------------------   ----------\r\n                    (1)        (2)        (3)          (4)\r\n----------------------------------------------------------\r\nSepalWidth     0.804***   0.432***   0.496***             \r\n                (0.106)    (0.081)    (0.086)             \r\nPetalLength               0.776***   0.829***      -0.188*\r\n                           (0.064)    (0.069)      (0.083)\r\nPetalWidth                            -0.315*     0.626***\r\n                                      (0.151)      (0.123)\r\nSepalLength                                       0.378***\r\n                                                   (0.066)\r\n----------------------------------------------------------\r\nSpeciesDummy        Yes        Yes        Yes          Yes\r\n----------------------------------------------------------\r\nEstimator           OLS        OLS        OLS          OLS\r\n----------------------------------------------------------\r\nN                   150        150        150          150\r\nR2                0.726      0.863      0.867        0.635\r\n----------------------------------------------------------LaTeX output can be generated by usingregtable(rr1,rr2,rr3,rr4; renderSettings = latexOutput())which yields\\begin{tabular}{lrrrr}\r\n\\toprule\r\n             & \\multicolumn{3}{c}{SepalLength} & \\multicolumn{1}{c}{SepalWidth} \\\\\r\n\\cmidrule(lr){2-4} \\cmidrule(lr){5-5}\r\n             &      (1) &      (2) &       (3) &                            (4) \\\\\r\n\\midrule\r\nSepalWidth   & 0.804*** & 0.432*** &  0.496*** &                                \\\\\r\n             &  (0.106) &  (0.081) &   (0.086) &                                \\\\\r\nPetalLength  &          & 0.776*** &  0.829*** &                        -0.188* \\\\\r\n             &          &  (0.064) &   (0.069) &                        (0.083) \\\\\r\nPetalWidth   &          &          &   -0.315* &                       0.626*** \\\\\r\n             &          &          &   (0.151) &                        (0.123) \\\\\r\nSepalLength  &          &          &           &                       0.378*** \\\\\r\n             &          &          &           &                        (0.066) \\\\\r\n\\midrule\r\nSpeciesDummy &      Yes &      Yes &       Yes &                            Yes \\\\\r\n\\midrule\r\nEstimator    &      OLS &      OLS &       OLS &                            OLS \\\\\r\n\\midrule\r\n$N$          &      150 &      150 &       150 &                            150 \\\\\r\n$R^2$        &    0.726 &    0.863 &     0.867 &                          0.635 \\\\\r\n\\bottomrule\r\n\\end{tabular}Similarly, HTML tables can be created with htmlOutput().Send the output to a text file by passing the destination file string to the asciiOutput(), latexOutput(), or htmlOutput() functions:regtable(rr1,rr2,rr3,rr4; renderSettings = latexOutput(\"myoutputfile.tex\"))then use \\input in LaTeX to include that file in your code. Be sure to use the booktabs package:\\documentclass{article}\r\n\\usepackage{booktabs}\r\n\r\n\\begin{document}\r\n\r\n\\begin{table}\r\n\\label{tab:mytable}\r\n\\input{myoutputfile}\r\n\\end{table}\r\n\r\n\\end{document}regtable() can also print DataFrameRegressionModel\'s from GLM.jl:dobson = DataFrame(Counts = [18.,17,15,20,10,20,25,13,12],\r\n    Outcome = pool(repeat([\"A\", \"B\", \"C\"], outer = 3)),\r\n    Treatment = pool(repeat([\"a\",\"b\", \"c\"], inner = 3)))\r\nlm1 = fit(LinearModel, @formula(SepalLength ~ SepalWidth), df)\r\ngm1 = fit(GeneralizedLinearModel, @formula(Counts ~ 1 + Outcome + Treatment), dobson,\r\n                  Poisson())\r\n\r\nregtable(rr1,lm1,gm1; renderSettings = asciiOutput())yields---------------------------------------------\r\n                   SepalLength        Counts\r\n               -------------------   --------\r\n                    (1)        (2)        (3)\r\n---------------------------------------------\r\n(Intercept)    6.526***   6.526***   3.045***\r\n                (0.479)    (0.479)    (0.171)\r\nSepalWidth       -0.223     -0.223           \r\n                (0.155)    (0.155)           \r\nOutcome: B                             -0.454\r\n                                      (0.202)\r\nOutcome: C                             -0.293\r\n                                      (0.193)\r\nTreatment: b                            0.000\r\n                                      (0.200)\r\nTreatment: c                            0.000\r\n                                      (0.200)\r\n---------------------------------------------\r\nEstimator           OLS        OLS         NL\r\n---------------------------------------------\r\nN                   150        150          9\r\nR2                0.014      0.014           \r\n---------------------------------------------"
},

{
    "location": "#Options-1",
    "page": "Readme",
    "title": "Options",
    "category": "section",
    "text": ""
},

{
    "location": "#Function-Arguments-1",
    "page": "Readme",
    "title": "Function Arguments",
    "category": "section",
    "text": "rr::rr::Union{AbstractRegressionResult,DataFrames.DataFrameRegressionModel}... are the AbstractRegressionResults from FixedEffectModels.jl (or DataFrameRegressionModels from GLM.jl) that should be printed. Only required argument.\nregressors is a Vector of regressor names (Strings) that should be shown, in that order. Defaults to an empty vector, in which case all regressors will be shown.\nfixedeffects is a Vector of FE names (Strings) that should be shown, in that order. Defaults to an empty vector, in which case all FE\'s will be shown.\nlabels is a Dict that contains displayed labels for variables (strings) and other text in the table. If no label for a variable is found, it default to variable names. See documentation for special values.\nestimformat is a String that describes the format of the estimate. Defaults to \"%0.3f\".\nestim_decoration is a Function that takes the formatted string and the p-value, and applies decorations (such as the beloved stars). Defaults to (* p<0.05, ** p<0.01, *** p<0.001).\nstatisticformat is a String that describes the format of the number below the estimate (se/t). Defaults to \"%0.4f\".\nbelow_statistic is a Symbol that describes a statistic that should be shown below each point estimate. Recognized values are :blank, :se, and :tstat. Defaults to :se.\nbelow_decoration is a Function that takes the formatted statistic string, and applies a decorations. Defaults to round parentheses.\nregression_statistics is a Vector of Symbols that describe statistics to be shown at the bottom of the table. Recognized symbols are :nobs, :r2, :r2_a, :r2_within, :f, :p, :f_kp, :p_kp, and :dof. Defaults to [:nobs, :r2].\nnumber_regressions is a Bool that governs whether regressions should be numbered. Defaults to true.\nnumber_regressions_decoration is a Function that governs the decorations to the regression numbers. Defaults to s -> \"($s)\".\nprint_fe_section is a Bool that governs whether a section on fixed effects should be shown. Defaults to true.\nprint_estimator_section  is a Bool that governs whether to print a section on which estimator (OLS/IV) is used. Defaults to true.\nstandardize_coef is a Bool that governs whether the table should show standardized coefficients. Note that this only works with DataFrameRegressionModels, and that only coefficient estimates and the below_statistic are being standardized (i.e. the R^2 etc still pertain to the non-standardized regression).\nout_buffer is an IOBuffer that the output gets sent to (unless an output file is specified, in which case the output is only sent to the file).\nrenderSettings::RenderSettings is a RenderSettings composite type that governs how the table should be rendered. Standard supported types are ASCII (via asciiOutput(outfile::String)) and LaTeX (via latexOutput(outfile::String)). If no argument to these two functions are given, the output is sent to STDOUT. Defaults to ASCII with STDOUT."
},

{
    "location": "#Label-Codes-1",
    "page": "Readme",
    "title": "Label Codes",
    "category": "section",
    "text": "The following is the exhaustive list of strings that govern the output of labels. Use e.g.labels = Dict(\"__LABEL_STATISTIC_N__\" => \"Number of observations\")to change the label for the row showing the number of observations in each regression.__LABEL_ESTIMATOR__ (default: \"Estimator\")\n__LABEL_ESTIMATOR_OLS__ (default: \"OLS\")\n__LABEL_ESTIMATOR_IV__ (default: \"IV\")\n__LABEL_ESTIMATOR_NL__ (default: \"NL\")__LABEL_FE_YES__ (default: \"Yes\")\n__LABEL_FE_NO__ (default: \"\")__LABEL_STATISTIC_N__ (default: \"N\" in asciiOutput())\n__LABEL_STATISTIC_R2__ (default: \"R2\" in asciiOutput())\n__LABEL_STATISTIC_R2_A__ (default: \"Adjusted R2\" in asciiOutput())\n__LABEL_STATISTIC_R2_WITHIN__ (default: \"Within-R2\" in asciiOutput())\n__LABEL_STATISTIC_F__ (default: \"F\" in asciiOutput())\n__LABEL_STATISTIC_P__ (default: \"F-test p value\" in asciiOutput())\n__LABEL_STATISTIC_F_KP__ (default: \"First-stage F statistic\" in asciiOutput())\n__LABEL_STATISTIC_P_KP__ (default: \"First-stage p value\" in asciiOutput())\n__LABEL_STATISTIC_DOF__ (default: \"Degrees of Freedom\" in asciiOutput())"
},

{
    "location": "autodocs/#RegressionTables.regtable",
    "page": "Docstrings",
    "title": "RegressionTables.regtable",
    "category": "function",
    "text": "Produces a publication-quality regression table, similar to Stata\'s esttab and R\'s stargazer.\n\nArguments\n\nrr::AbstractRegressionResult... are the AbstractRegressionResults from FixedEffectModels.jl that should be printed. Only required argument.\nregressors is a Vector of regressor names (Strings) that should be shown, in that order. Defaults to an empty vector, in which case all regressors will be shown.\nfixedeffects is a Vector of FE names (Strings) that should be shown, in that order. Defaults to an empty vector, in which case all FE\'s will be shown.\nlabels is a Dict that contains displayed labels for variables (strings) and other text in the table. If no label for a variable is found, it default to variable names. See documentation for special values.\nestimformat is a String that describes the format of the estimate. Defaults to \"%0.3f\".\nestim_decoration is a Function that takes the formatted string and the p-value, and applies decorations (such as the beloved stars). Defaults to (* p<0.05, ** p<0.01, *** p<0.001).\nstatisticformat is a String that describes the format of the number below the estimate (se/t). Defaults to \"%0.4f\".\nbelow_statistic is a Symbol that describes a statistic that should be shown below each point estimate. Recognized values are :blank, :se, and :tstat. Defaults to :se.\nbelow_decoration is a Function that takes the formatted statistic string, and applies a decorations. Defaults to round parentheses.\nregression_statistics is a Vector of Symbols that describe statistics to be shown at the bottom of the table. Recognized symbols are :nobs, :r2, :r2_a, :r2_within, :f, :p, :f_kp, :p_kp, and :dof. Defaults to [:nobs, :r2].\nnumber_regressions is a Bool that governs whether regressions should be numbered. Defaults to true.\nnumber_regressions_decoration is a Function that governs the decorations to the regression numbers. Defaults to s -> \"($s)\".\nprint_fe_section is a Bool that governs whether a section on fixed effects should be shown. Defaults to true.\nprint_estimator_section  is a Bool that governs whether to print a section on which estimator (OLS/IV/NL) is used. Defaults to true.\nstandardize_coef is a Bool that governs whether the table should show standardized coefficients. Note that this only works with DataFrameRegressionModels, and that only coefficient estimates and the below_statistic are being standardized (i.e. the R^2 etc still pertain to the non-standardized regression).\nout_buffer is an IOBuffer that the output gets sent to (unless an output file is specified, in which case the output is only sent to the file).\nrenderSettings::RenderSettings is a RenderSettings composite type that governs how the table should be rendered. Standard supported types are ASCII (via asciiOutput(outfile::String)) and LaTeX (via latexOutput(outfile::String)). If no argument to these two functions are given, the output is sent to STDOUT. Defaults to ASCII with STDOUT.\n\nDetails\n\nA typical use is to pass a number of AbstractRegressionResults to the function, along with a RenderSettings object.\n\nregtable(regressionResult1, regressionResult2; renderSettings = asciiOutput())\n\nPass a string to the functions that create a RenderSettings to divert output to a file. For example, using LaTeX output,\n\nregtable(regressionResult1, regressionResult2; renderSettings = latexOutput(\"myoutfile.tex\"))\n\nSee the full argument list for details.\n\nExamples\n\nusing RegressionTables, DataFrames, RDatasets, FixedEffectModels\ndf = dataset(\"datasets\", \"iris\")\ndf[:SpeciesDummy] = pool(df[:Species])\ndf[:isSmall] = pool(df[:SepalWidth] .< 2.9)\nrr1 = reg(df, @model(SepalLength ~ SepalWidth))\nrr2 = reg(df, @model(SepalLength ~ SepalWidth + PetalLength   , fe = SpeciesDummy))\nrr3 = reg(df, @model(SepalLength ~ SepalWidth + PetalLength + PetalWidth  , fe = SpeciesDummy  + isSmall))\nrr4 = reg(df, @model(SepalWidth ~ SepalLength + PetalLength + PetalWidth  , fe = SpeciesDummy))\nrr5 = reg(df, @model(SepalWidth ~ SepalLength + (PetalLength ~ PetalWidth)  , fe = SpeciesDummy))\n# default\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput())\n# display of statistics below estimates\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), below_statistic = :blank)\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), below_decoration = s -> \"[$(s)]\")\n# ordering of regressors, leaving out regressors\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), regressors = [\"SepalLength\";\"PetalWidth\";\"SepalWidth\"])\n# format of the estimates\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), estimformat = \"%02.5f\")\n# replace some variable names by other strings\nregtable(rr1,rr2,rr3; renderSettings = asciiOutput(), labels = Dict(\"SepalLength\" => \"My dependent variable: SepalLength\", \"PetalLength\" => \"Length of Petal\", \"PetalWidth\" => \"Width of Petal\", \"(Intercept)\" => \"Const.\" , \"isSmall\" => \"isSmall Dummies\", \"SpeciesDummy\" => \"Species Dummies\"))\n# do not print the FE block\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), print_fe_section = false)\n# re-order fixed effects\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), fixedeffects = [\"isSmall\", \"SpeciesDummy\"])\n# change the yes/no labels in the fixed effect section, and statistics labels\nregtable(rr1,rr2,rr3,rr4; renderSettings = asciiOutput(), labels = Dict(\"__LABEL_FE_YES__\" => \"Mhm.\", \"__LABEL_FE_NO__\" => \"Nope.\", \"__LABEL_STATISTIC_N__\" => \"Number of observations\", \"__LABEL_STATISTIC_R2__\" => \"R Squared\"))\n# full set of available statistics\nregtable(rr1,rr2,rr3,rr5; renderSettings = asciiOutput(), regression_statistics = [:nobs, :r2, :r2_a, :r2_within, :f, :p, :f_kp, :p_kp, :dof])\n# LaTeX output\nregtable(rr1,rr2,rr3,rr4; renderSettings = latexOutput())\n# LaTeX output to file\nregtable(rr1,rr2,rr3,rr4; renderSettings = latexOutput(\"myoutfile.tex\"))\n\n\n\n\n\n"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "RegressionTables.RegressionTableRegressionTables.RegressionTablesRegressionTables.RenderSettingsRegressionTables.asciiOutputRegressionTables.columnsRegressionTables.default_ascii_estim_decorationRegressionTables.default_latex_estim_decorationRegressionTables.evalRegressionTables.htmlOutputRegressionTables.includeRegressionTables.isFERegressionResultRegressionTables.isIVRegressionResultRegressionTables.isOLSRegressionResultRegressionTables.latexOutputRegressionTables.regtableRegressionTables.render"
},

]}
