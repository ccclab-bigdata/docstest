var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Readme",
    "title": "Readme",
    "category": "page",
    "text": "<p align=\"center\"> <img width=\"400px\" src=\"https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png\"/> </p>(Image: Build Status)Zygote is a working prototype for source-to-source automatic differentiation (AD) in Julia.Zygote is in an early stage and may break, but issue reports and beta testing are welcome. Note that due to current compiler limitations it may be faster on this branch of Julia.julia> using Zygote: derivative\n\njulia> f(x) = 3x^2 + 2x + 1\nf (generic function with 1 method)\n\njulia> f′(x) = derivative(f, x)\nf′ (generic function with 1 method)\n\njulia> f(5), f′(5)\n(86, 32.0)\"Source-to-source\" means that Zygote hooks into Julia\'s compiler, and generates the backwards pass for you – as if you had written it by hand.Despite its performance, Zygote supports the full flexibility and dynamism of the Julia language.julia> using Zygote: gradient\n\njulia> fs = Dict(\"sin\" => sin, \"cos\" => cos, \"tan\" => tan);\n\njulia> gradient(x -> fs[readline()](x), 1)\nsin\n(0.5403023058681398,)Zygote\'s lower-level API exposes backpropagators, which can be used to feed custom sensitivities or implement other more advanced functionality.julia> using Zygote: forward\n\njulia> y, back = forward(x -> x .* 3, [1, 1, 1])\n([3, 3, 3], λ)\n\njulia> back([1, 2, 3])\n([3, 6, 9],)Defining custom gradients is a cinch – and if you make a mistake, you\'ll get a great stack trace pointing you to the issue.julia> using Zygote: @grad\n\njulia> add(a, b) = a + b\n\njulia> @grad add(a, b) = add(a, b), Δ -> (Δ, Δ)To support large machine learning models with many parameters, Zygote can differentiate implicitly-used parameters, as opposed to just function arguments.julia> W, b = rand(2, 3), rand(2);\n\njulia> predict(x) = W*x .+ b;\n\njulia> g = gradient(() -> sum(predict([1,2,3])), Params([W, b]))\nGrads(...)\n\njulia> g[W], g[b]\n([1.0 2.0 3.0; 1.0 2.0 3.0], [1.0, 1.0])"
},

{
    "location": "autodocs/#",
    "page": "Docstrings",
    "title": "Docstrings",
    "category": "page",
    "text": "Zygote.@adjointZygote.@code_gradZygote.@code_irZygote.@gradZygote.@nogradZygote.AdjointZygote.AlphaZygote.ContextZygote.GradsZygote.IdSetZygote.JZygote.JnewZygote.MetaZygote.ParamsZygote.ReverseIRZygote.SlotZygote.StackZygote.TypedMetaZygote.ZygoteZygote.__init__Zygote.__inits__Zygote.__new__Zygote._compact!Zygote._forwardZygote._forward_typeZygote._gradtupleZygote._lookup_gradZygote._push!Zygote._unflattenZygote.accumZygote.accum!Zygote.accum_paramZygote.accumif!Zygote.afterphiZygote.alphaZygote.alphausesZygote.argmapZygote.argnames!Zygote.block!Zygote.blockidxZygote.cacheZygote.code_gradZygote.code_irZygote.code_irmZygote.concreteZygote.derefZygote.deref!Zygote.deref_tupleZygote.deref_tuple_vaZygote.derivativeZygote.domfrontZygote.dualZygote.evalZygote.exprtypeZygote.finish_dcZygote.forwardZygote.forward_stacks!Zygote.grad!Zygote.grad_irZygote.grad_mutZygote.gradientZygote.gradindexZygote.gradtypeZygote.ignoreZygote.ignoredZygote.ignored_fZygote.includeZygote.inline_sparams!Zygote.inlineable!Zygote.insert_blockend!Zygote.isassertZygote.iscallZygote.isdirectZygote.istrackableZygote.isvalidtypeZygote.merge_returnsZygote.metaZygote.nt_nothingZygote.pairZygote.partialZygote.reachableZygote.record!Zygote.record_branches!Zygote.record_globals!Zygote.refreshZygote.renameZygote.reverse_cfgZygote.reverse_irZygote.reverse_orderZygote.reverse_stacks!Zygote.roundtripZygote.slots!Zygote.spliceargs!Zygote.stacks!Zygote.tailmemaybeZygote.trimZygote.typed_metaZygote.unapplyZygote.unbroadcastZygote.unflattenZygote.unreachableZygote.untyped_metaZygote.unwrapZygote.update!Zygote.usagesZygote.usetypedZygote.valid_usagesZygote.varargsZygote.varargs!Zygote.worldcounterZygote.xaccum!Zygote.xaccum_Zygote.xcallZygote.xgetindexZygote.xgradindexZygote.xstackZygote.xtupleZygote.∇broadcast"
},

]}
